var Rotator=pc.createScript("rotator");Rotator.attributes.add("speed",{type:"vec3",title:"Speed",description:"The maximum speed at which the entity may rotate",default:[10,10,10]}),Rotator.attributes.add("speedDeviation",{type:"number",title:"Speed Deviation",description:"The deviation from the maximum speed at which the entity may rotate",default:40}),Rotator.prototype.initialize=function(){var e=this.speedDeviation;this._randomDeviation=new pc.Vec3(getRandomDeviation(e),getRandomDeviation(e),getRandomDeviation(e)),this._effectiveSpeed=(new pc.Vec3).add2(this._randomDeviation,this.speed)},Rotator.prototype.update=function(e){this.entity.rotateLocal(this._effectiveSpeed.x*e,this._effectiveSpeed.y*e,this._effectiveSpeed.z*e)};var Mover=pc.createScript("mover");Mover.attributes.add("speed",{type:"vec2",title:"Speed",description:"The maximum speeds at which the entity may move",default:[10,10]}),Mover.attributes.add("speedDeviation",{type:"number",title:"Speed Deviation",description:"How much the speed should deviate from the established speed.",default:3}),Mover.prototype.initialize=function(){this.calculateEffectiveSpeed()},Mover.prototype.update=function(e){this.entity.translate(this._effectiveSpeed.x*e,0,this._effectiveSpeed.y*e)},Mover.prototype.calculateEffectiveSpeed=function(){var e=this.speed,t=this.speedDeviation;this._randomSpeed=new pc.Vec2(getRandomFloatDeviation(e.x,3),getRandomFloatDeviation(e.y,3)),this._randomDeviation=new pc.Vec2(getRandomFloatDeviation(t,3),getRandomFloatDeviation(t,3)),this._effectiveSpeed=(new pc.Vec2).add2(this._randomDeviation,this._randomSpeed)};var Health=pc.createScript("health");Health.attributes.add("maxHealth",{type:"number",title:"Max Health",description:"The maximum health for the entity",default:100}),Health.attributes.add("destroyOnNoHealth",{type:"boolean",title:"Destroy On No Health",description:"Whether to destroy the entity on reaching 0 health.",default:!0}),Health.attributes.add("gracePeriod",{type:"number",title:"Grace Period",description:"The duration of an invincibility period after being hit."}),Health.prototype.initialize=function(){this.currentHealth=this.maxHealth,this.setGraceTimer(),this._shouldDestroy=!1},Health.prototype.update=function(t){this._graceTimer-=t},Health.prototype.postUpdate=function(){this._shouldDestroy&&this.entity.destroy()},Health.prototype.setMaxHealth=function(t){if(t!==this.maxHealth){var e=this.maxHealth-t;this.maxHealth=t,this.currentHealth=Math.min(this.currentHealth,this.maxHealth),e>0?this.fire("damaged",e):this.fire("healed",e)}},Health.prototype.heal=function(t){this.currentHealth+=t,this.currentHealth=Math.min(this.currentHealth,this.maxHealth),this.fire("healed",t)},Health.prototype.damage=function(t){this.isInGraceTime()||(this.currentHealth-=t,this.currentHealth=Math.max(this.currentHealth,0),this.fire("damaged",t),this.currentHealth<=0&&(this.fire("die",this.currentHealth),this.destroyOnNoHealth&&(this._shouldDestroy=!0)),this.setGraceTimer())},Health.prototype.kill=function(){this.damage(this.currentHealth)},Health.prototype.isInGraceTime=function(){return this._graceTimer>0},Health.prototype.setGraceTimer=function(){this._graceTimer=this.gracePeriod};var ContactDamage=pc.createScript("contactDamage");ContactDamage.attributes.add("damage",{type:"number",title:"Damage",description:"The amount of damage to deal on contact.",default:5}),ContactDamage.attributes.add("destroyOnContact",{type:"boolean",title:"Destroy On Contact",description:"Whether to destroy the entity after dealing contact",default:!0}),ContactDamage.attributes.add("ignoredTag",{type:"string",title:"Ignored Tag",description:"Tag to not deal damage to."}),ContactDamage.prototype.initialize=function(){this.entity.collision.on("collisionstart",this.dealDamage,this)},ContactDamage.prototype.dealDamage=function(t){t?.other&&(t.other.script?.health&&!t.other.tags.has(this.ignoredTag)&&t.other.script.health.damage(this.damage),this.destroyOnContact&&this.entity.destroy())};var Spawner=pc.createScript("spawner");Spawner.attributes.add("spawnInterval",{type:"number",title:"Spawn Interval",description:"The interval between spawning each entity",default:4}),Spawner.attributes.add("maxActiveSpawns",{type:"number",title:"Max Active Spawns",description:"The number of maximum active spawned entities",default:20}),Spawner.attributes.add("intervalDeviation",{type:"number",title:"Spawn Interval Deviation",description:"How much the spawner should deviate from the set Spawn Interval for each spawn, for added randomness.",default:1.75}),Spawner.attributes.add("spawnPoints",{type:"entity",title:"Spawn Points",description:"The positions to be used as spawn points, taken from entities.",array:!0}),Spawner.attributes.add("spawnParent",{type:"entity",title:"Spawn Parent",description:"The entity to use as a parent for spawned entities"}),Spawner.attributes.add("spawnedEntity",{type:"asset",assetType:"template",title:"Spawn Template",description:"The entity to spawn"}),Spawner.prototype.initialize=function(){this._spawnTimer=0,this._activeSpawns=[],this.cacheStartingValues()},Spawner.prototype.update=function(t){this._spawnTimer-=t,this.shouldSpawnEntity()&&this.spawn()},Spawner.prototype.spawn=function(){var t=this.spawnedEntity.resource.instantiate();this._activeSpawns.push(t),this.setPositionOf(t),this._spawnTimer=this.spawnInterval,this.fire("spawned",t)},Spawner.prototype.setPositionOf=function(t){t.reparent(this.spawnParent);var n=this.getRandomSpawnpoint().getPosition();t.setPosition(n)},Spawner.prototype.shouldSpawnEntity=function(){return this.isTimeToSpawn()&&this.hasSpaceToSpawn()},Spawner.prototype.isTimeToSpawn=function(){return this._spawnTimer<=0},Spawner.prototype.hasSpaceToSpawn=function(){return this.clearDeadSpawns(),this._activeSpawns.length<this.maxActiveSpawns},Spawner.prototype.getRandomSpawnpoint=function(){var t=Math.floor(Math.random()*this.spawnPoints.length);return this.spawnPoints[t]},Spawner.prototype.clearDeadSpawns=function(){const t=[];this._activeSpawns.forEach((n=>{n.parent===this.spawnParent&&t.push(n)})),this._activeSpawns=t},Spawner.prototype.cacheStartingValues=function(){this._startingSpawnInterval=this.spawnInterval,this._startingMaxSpawns=this.maxActiveSpawns},Spawner.prototype.resetSpawning=function(){this.spawnInterval=this._startingSpawnInterval,this.maxActiveSpawns=this._startingMaxSpawns},Spawner.prototype.killAllSpawns=function(){this.clearDeadSpawns(),this._activeSpawns.forEach((t=>{var n=t.script?t.script.deathEffect:null;n&&(n.spawn=!1),t.destroy()}))};function getRandomDeviation(n){var t=Math.floor(Math.random()*(n+1));return t*=Math.round(Math.random())?1:-1}function getRandomInRange(n,t){return n=Math.ceil(n),t=Math.floor(t),Math.floor(Math.random()*(t-n+1))+n}function getRandomFloatInRange(n,t,a){const o=(Math.random()*(t-n)+n).toFixed(a);return parseFloat(o)}function getRandomFloatDeviation(n,t){return getRandomFloatInRange(-n,n,t)}!function(){var e={},c=0;pc.timer={},pc.timer.add=function(t,i,n){if(t>0){var a={};return a.id=c,e[c]={secsLeft:t,callback:i,scope:n},c+=1,a}return null},pc.timer.remove=function(c){c&&delete e[c.id]},pc.timer.update=function(c){for(var t in e){var i=e[t];i.secsLeft-=c,i.secsLeft<=0&&(i.callback.call(i.scope),delete e[t])}};var t=pc.Application.getApplication();t&&t.on("update",(function(e){pc.timer.update(e)}))}();var AutoDestroy=pc.createScript("autoDestroy");AutoDestroy.attributes.add("lifetime",{type:"number",title:"Lifetime",description:"How long the entity should wait before destroying itself",default:60}),AutoDestroy.prototype.initialize=function(){this._timerHandle=pc.timer.add(this.lifetime,(function(){this.entity.destroy()}),this),this.on("destroy",(function(){pc.timer.remove(this._timerHandle)}),this)};var GameManager=pc.createScript("gameManager");GameManager.attributes.add("scoreDisplayEntity",{type:"entity",title:"Score Counter Entity",description:"The entity containing the score-counter script."}),GameManager.attributes.add("spawnerEntity",{type:"entity",title:"Spawner Entity",description:"The etntity containing the spawner script."}),GameManager.attributes.add("difficultyIncreaseCoefficient",{type:"number",title:"Difficulty Increase Coefficient",description:"A number that indicates how fast difficulty should increase. 1 means the difficulty will not increase. Above or below 1 means the difficulty will increase and decrease over time, respectively.",default:1}),GameManager.attributes.add("difficultyIncreaseInterval",{type:"number",title:"Difficulty Increase Interval",description:"How many seconds should pass before the difficulty increases by the amount determined by the Difficulty Increase Coefficient.",default:10}),GameManager.attributes.add("ambientManagerEntity",{type:"entity",title:"Ambient Manager Entity",description:"The entity containing the ambient-manager script."}),GameManager.attributes.add("gameOverWindow",{type:"entity",title:"Game Over Window",description:"The Game Over Window entity"}),GameManager.attributes.add("postGameScoreTextElement",{type:"entity",title:"Post Game Score Text Element",description:"The text element displaying post-game score"}),GameManager.prototype.initialize=function(){this._difficultyIncreaseCountdown=this.difficultyIncreaseInterval,this._startingInterval=this.spawnerEntity.script.spawner.spawnInterval,this.startGame()},GameManager.prototype.update=function(t){this._gameStarted&&(this._difficultyIncreaseCountdown-=t,this._difficultyIncreaseCountdown<=0&&this.increaseDifficulty())},GameManager.prototype.startGame=function(){this.resetEnvironment(),this.startKeepingScore(),this._gameStarted=!0,this.app.root.findByTag("Player")[0].on("destroy",this.endGame,this)},GameManager.prototype.resetEnvironment=function(){this.spawnerEntity.script.spawner.killAllSpawns(),this.spawnerEntity.script.spawner.resetSpawning(),this.ambientManagerEntity.script.ambientManager.updateTransition(0)},GameManager.prototype.startKeepingScore=function(){this.resetScore(),this.app.on("score:increased",this.addScore,this)},GameManager.prototype.endGame=function(){this.app.fire("window:switchto",this.gameOverWindow),this.app.off("score:increased",this.addScore,this),this.postGameScoreTextElement.element.text=this._score,this._gameStarted=!1},GameManager.prototype.addScore=function(t){this._score+=t,this.scoreDisplayEntity.script.scoreCounter.setScore(this._score)},GameManager.prototype.resetScore=function(){this._score=0,this.scoreDisplayEntity.script.scoreCounter.setScore(this._score)},GameManager.prototype.increaseDifficulty=function(){this.spawnerEntity.script.spawner.spawnInterval*=1/this.difficultyIncreaseCoefficient,this.spawnerEntity.script.spawner.maxActiveSpawns*=this.difficultyIncreaseCoefficient,this.ambientManagerEntity.script.ambientManager.updateTransition(1-this.spawnerEntity.script.spawner.spawnInterval/this._startingInterval),this._difficultyIncreaseCountdown=this.difficultyIncreaseInterval};var ScoreCounter=pc.createScript("scoreCounter");ScoreCounter.attributes.add("textElement",{type:"entity",title:"Text Element Entity",description:"The entity containing the text element to modify."}),ScoreCounter.attributes.add("scoreLerpSpeed",{type:"number",title:"Score Lerp Speed",description:"How fast the score should lerp to new values.",default:100}),ScoreCounter.attributes.add("maxSize",{type:"number",title:"Size Multiplier",description:"How large the score counter should get when it increases.",default:1.6}),ScoreCounter.prototype.initialize=function(){this._targetScore=0,this._displayedScore=0,this._scoreLerpProgress=0},ScoreCounter.prototype.update=function(e){this.doesDisplayNeedUpdate&&this.updateScoreDisplay(e)},ScoreCounter.prototype.updateScoreDisplay=function(e){this._scoreLerpProgress+=e*this.scoreLerpSpeed,this.handleScoreLerp(e),this.handleSizeLerp(e),this.setDisplayTo(this._displayedScore)},ScoreCounter.prototype.handleSizeLerp=function(){var e=pc.math.lerp(this.entity.getLocalScale().x,1,this._scoreLerpProgress);this.entity.setLocalScale(e,e,e)},ScoreCounter.prototype.handleScoreLerp=function(){this._displayedScore=pc.math.lerp(this._displayedScore,this._targetScore,this._scoreLerpProgress),this._displayedScore=Math.min(this._displayedScore,this._targetScore)},ScoreCounter.prototype.setScore=function(e){this.entity.setLocalScale(this.maxSize,this.maxSize,this.maxSize),this._targetScore=e,this._scoreLerpProgress=0},ScoreCounter.prototype.doesDisplayNeedUpdate=function(){return this._targetScore!==this._displayedScore},ScoreCounter.prototype.setDisplayTo=function(e){this.textElement.element.text=Math.round(e)};var ScoreGiver=pc.createScript("scoreGiver");ScoreGiver.attributes.add("value",{type:"number",title:"Value",description:"The amount of score to give on the death of the entity",default:100}),ScoreGiver.prototype.initialize=function(){this.entity.script.health.on("die",this.triggerScoreEvent,this)},ScoreGiver.prototype.triggerScoreEvent=function(){this.app.fire("score:increased",this.value)};var Looper=pc.createScript("looper");Looper.prototype.initialize=function(){this._camera=this.app.root.findByTag("MainCamera")[0]?.camera,this._camera&&this.setLoopingBounds()},Looper.prototype.postUpdate=function(i){this.handleXLooping(),this.handleZLooping()},Looper.prototype.setLoopingBounds=function(){this._xLimit=normalizedScreenToWorld(this._camera,1.1,0).x,this._zLimit=normalizedScreenToWorld(this._camera,0,1.1).z},Looper.prototype.handleXLooping=function(){var i=this.entity.getPosition();i.x>this._xLimit&&this.entity.setPosition(-1*this._xLimit,i.y,i.z),i.x<-1*this._xLimit&&this.entity.setPosition(this._xLimit,i.y,i.z)},Looper.prototype.handleZLooping=function(){var i=this.entity.getPosition();i.z>this._zLimit&&this.entity.setPosition(i.x,i.y,-1*this._zLimit),i.z<-1*this._zLimit&&this.entity.setPosition(i.x,i.y,this._zLimit)};var HealthBasedScaler=pc.createScript("healthBasedScaler");HealthBasedScaler.attributes.add("scaleFactor",{type:"number",title:"Scale Factor",description:"A number to define how much health should impact scale.",default:2}),HealthBasedScaler.prototype.postInitialize=function(){this.startingScale=this.entity.getLocalScale().x,this.updateScale(),this.entity.script.health.on("damaged",this.updateScale,this)},HealthBasedScaler.prototype.updateScale=function(){if(!(this.entity.script.health.currentHealth<=0)){var t=this.calculateNewScale();this.entity.setLocalScale(t,t,t)}},HealthBasedScaler.prototype.calculateNewScale=function(){return this.startingScale+(this.entity.script.health.currentHealth-1)/10*this.scaleFactor};var PlayerMover=pc.createScript("playerMover");PlayerMover.attributes.add("maxSpeed",{type:"number",title:"Max Speed",description:"The maximum speed at which the player can move.",default:10}),PlayerMover.attributes.add("acceleration",{type:"number",title:"Acceleration",description:"How fast the ship accelerates.",default:10}),PlayerMover.attributes.add("deaccelerationRate",{type:"number",title:"Deacceleration Rate",description:"How fast the ship deaccelerates. The higher the number, the faster the deacceleration.",default:.5}),PlayerMover.prototype.initialize=function(){this._camera=this.app.root.findComponent("camera"),this._lastMousePos=new pc.Vec3(0,0,0),this._speed=new pc.Vec2(0,0),this.app.mouse.on(pc.EVENT_MOUSEMOVE,this.updateTarget,this),this._localRightSpeed=new pc.Vec3,this._localForwardSpeed=new pc.Vec3},PlayerMover.prototype.destroy=function(){this.app.mouse.off(pc.EVENT_MOUSEMOVE,this.handleAiming,this)},PlayerMover.prototype.update=function(e){this.handleAcceleration(e),this.handleDeacceleration(e),this.handleMovement(e),this.handleAiming()},PlayerMover.prototype.handleAcceleration=function(e){var t=this.acceleration*e;this._localForwardSpeed.copy(this.entity.forward),this._localRightSpeed.copy(this.entity.right);var a=0;this.app.keyboard.isPressed(pc.KEY_A)||this.app.keyboard.isPressed(pc.KEY_LEFT)?a=-t:(this.app.keyboard.isPressed(pc.KEY_D)||this.app.keyboard.isPressed(pc.KEY_RIGHT))&&(a=t),this._localRightSpeed.mulScalar(a);var i=0;this.app.keyboard.isPressed(pc.KEY_W)||this.app.keyboard.isPressed(pc.KEY_UP)?i=t:(this.app.keyboard.isPressed(pc.KEY_S)||this.app.keyboard.isPressed(pc.KEY_DOWN))&&(i=-t),this._localForwardSpeed.mulScalar(i),this._speed.x+=this._localForwardSpeed.x+this._localRightSpeed.x,this._speed.y+=this._localForwardSpeed.z+this._localRightSpeed.z},PlayerMover.prototype.handleDeacceleration=function(e){this._speed.x*=1-this.deaccelerationRate*e,this._speed.y*=1-this.deaccelerationRate*e},PlayerMover.prototype.handleMovement=function(e){this.entity.translate(this._speed.x*e,0,0),this.entity.translate(0,0,this._speed.y*e)},PlayerMover.prototype.updateTarget=function(e){if(e){var t=this._camera.screenToWorld(e.x,e.y,this._camera.farClip);t.y=0,this._lastMousePos=t}},PlayerMover.prototype.handleAiming=function(){this.entity.lookAt(this._lastMousePos)};var SimpleMover=pc.createScript("simpleMover");SimpleMover.attributes.add("speed",{type:"vec2",title:"Speed",description:"The speed at which the entity should move.",default:[10,0]}),SimpleMover.prototype.update=function(e){this.entity.translateLocal(this.speed.x*e,0,this.speed.y*e)};var Bouncer=pc.createScript("bouncer");Bouncer.prototype.initialize=function(){this.entity.collision.on("collisionstart",this.beginBounce,this)},Bouncer.prototype.beginBounce=function(e){var t=this.entity,o=e.other,i=this.getRelativePositionFromTo(t,o);t.script.mover._effectiveSpeed.x=i.x,t.script.mover._effectiveSpeed.z=i.z},Bouncer.prototype.getRelativePositionFromTo=function(e,t){var o=e.getPosition(),i=t.getPosition(),n=new pc.Vec3;return n.sub2(o,i),n};var Splitter=pc.createScript("splitter");Splitter.attributes.add("spawnTemplate",{type:"asset",assetType:"template",title:"Spawn Template",description:"The template of the entity to spawn on splitting."}),Splitter.attributes.add("splitHealthRequirement",{type:"number",default:5,title:"Split Health Requirement",description:"The minimum health required for the entity to be able to split on death."}),Splitter.attributes.add("minMaxSplits",{type:"vec2",default:[1,3],title:"Min and Max Splits",description:"The minimum and maximum amount of spawns left behind when the entity splits."}),Splitter.attributes.add("spawnHealthPercentage",{type:"number",default:.75,title:"Spawn Health Percentage",description:"What percentage of the parent entity health the spawn will have."}),Splitter.attributes.add("spawnSpread",{type:"number",default:1,title:"Spawn Spread",description:"How far the child entities can spawn from the entity being split."}),Splitter.prototype.initialize=function(){this.entity.script.health.on("die",this.split,this)},Splitter.prototype.split=function(){if(this.shouldSplit())for(var t=getRandomInRange(this.minMaxSplits.x,this.minMaxSplits.y),e=0;e<t;e++)this.spawn()},Splitter.prototype.spawn=function(){var t=this.spawnTemplate.resource.instantiate();this.setSpawnPosition(t),t.script.health&&this.setSpawnHealth(t)},Splitter.prototype.setSpawnPosition=function(t){var e=this.calculateSpawnPosition();t.setPosition(e),t.setEulerAngles(getRandomInRange(0,359),getRandomInRange(0,359),getRandomInRange(0,359)),t.reparent(this.entity.parent)},Splitter.prototype.calculateSpawnPosition=function(){var t=this.entity.getPosition();t.y=0;var e=new pc.Vec3(getRandomDeviation(this.spawnSpread),0,getRandomDeviation(this.spawnSpread));return t.add(e)},Splitter.prototype.setSpawnHealth=function(t){t.script.health.setMaxHealth(this.getSpawnHealth())},Splitter.prototype.getSpawnHealth=function(){return Math.max(Math.floor(this.entity.script.health.maxHealth*this.spawnHealthPercentage),1)},Splitter.prototype.shouldSplit=function(){return this.entity.script.health.maxHealth>=this.splitHealthRequirement};var WindowManager=pc.createScript("windowManager");WindowManager.attributes.add("windowParents",{type:"entity",title:"Windows",description:"The window entities that are part of the menu",array:!0}),WindowManager.prototype.initialize=function(){this.app.on("window:switchto",this.switchTo,this),this.app.on("window:closeall",this.closeAll,this)},WindowManager.prototype.switchTo=function(t){for(const i of this.windowParents)i.enabled=t===i},WindowManager.prototype.closeAll=function(){for(const t of this.windowParents)t.enabled=!1};var WorldScreenAnchor=pc.createScript("worldScreenAnchor");WorldScreenAnchor.attributes.add("cameraEntity",{type:"entity",title:"Camera",description:"The entity that contains the camera to use when converting coordinates."}),WorldScreenAnchor.attributes.add("normalizedScreenCoordinates",{type:"vec2",default:[.5,.5],title:"Normalized Screen Coordinates",description:"The normalized screen position to place the entity in."}),WorldScreenAnchor.prototype.initialize=function(){this.reposition()},WorldScreenAnchor.prototype.reposition=function(){var e=this.entity.getPosition().y,t=normalizedScreenToWorld(this.cameraEntity.camera,this.normalizedScreenCoordinates.x,this.normalizedScreenCoordinates.y);t.y=e,this.entity.setPosition(t)};function normalizedScreenToWorld(e,i,c){var n=pc.Application.getApplication().graphicsDevice.clientRect,r=n.width*i,t=n.height*c,o=e.screenToWorld(r,t,0);return o.y=0,o}var WindowSwitcherButton=pc.createScript("windowSwitcherButton");WindowSwitcherButton.attributes.add("window",{type:"entity",title:"Target Window",description:"The window to switch to."}),WindowSwitcherButton.attributes.add("additionalEvent",{type:"string",title:"Additional Events",description:"Additional events to fire when clicked."}),WindowSwitcherButton.prototype.initialize=function(){this.entity.button.on("click",this.doSwitch,this)},WindowSwitcherButton.prototype.doSwitch=function(){this.app.fire("window:switchto",this.window),this.additionalEvent.length>0&&this.app.fire(this.additionalEvent)};var Gun=pc.createScript("gun");Gun.attributes.add("bulletTemplate",{type:"asset",assetType:"template",title:"Bullet Template",description:"The template of the bullet entity to spawn."}),Gun.attributes.add("cooldown",{type:"number",default:.25,title:"Cooldown",description:"How long the gun has to wait between firing each bullet"}),Gun.attributes.add("spread",{type:"number",default:10,title:"Bullet Spread",description:"Up to how many degrees each bullet should vary in direction."}),Gun.attributes.add("soundPitchDeviation",{type:"number",default:.25,title:"Sound Pitch Deviation",description:"The deviation from standard pitch that every shot sound should have"}),Gun.attributes.add("traumaPerShot",{type:"number",default:.05,title:"Trauma Per Shot",description:"The amount of trauma/shake that should be induced per shot."}),Gun.prototype.initialize=function(){this._cooldownTimer=this.cooldown},Gun.prototype.update=function(t){this._cooldownTimer-=t,this.app.mouse.isPressed(pc.MOUSEBUTTON_LEFT)&&this.canFire()&&this.fireBullet()},Gun.prototype.canFire=function(){return this._cooldownTimer<=0},Gun.prototype.fireBullet=function(){this.spawnBullet(),this.playShotSound(),this._cooldownTimer=this.cooldown,this.app.fire("camera:shake",this.traumaPerShot)},Gun.prototype.playShotSound=function(){this.entity.sound.pitch=1+getRandomDeviation(100*this.soundPitchDeviation)/100,this.entity.sound.play("Fire")},Gun.prototype.spawnBullet=function(){var t=this.bulletTemplate.resource.instantiate();this.position(t)},Gun.prototype.position=function(t){t.reparent(this.app.root),t.setPosition(this.entity.getPosition()),this.applySpreadOn(t)},Gun.prototype.applySpreadOn=function(t){var e=this.entity.getEulerAngles();e.y+=getRandomDeviation(this.spread),t.setEulerAngles(e)};var DeathEffect=pc.createScript("deathEffect");DeathEffect.attributes.add("particleEffects",{type:"asset",assetType:"template",array:!0,title:"Particle Effect Templates"}),DeathEffect.prototype.initialize=function(){this.spawn=!0,this.entity.on("destroy",this.onDestroy,this),this.app.once("scene:beforechange",this.onBeforeSceneChange,this)},DeathEffect.prototype.onDestroy=function(){if(this.spawn)for(var t=0;t<this.particleEffects.length;t++){var e=this.particleEffects[t].resource.instantiate();e.reparent(this.app.root),e.setPosition(this.entity.getPosition()),setTimeout((function(){e.enabled=!0}))}},DeathEffect.prototype.onBeforeSceneChange=function(){this.spawn=!1};var TextAnimator=pc.createScript("textAnimator");TextAnimator.attributes.add("growthScale",{type:"number",title:"Growth Scale",description:"The scale of the breathing effect to the entity scale",default:1}),TextAnimator.attributes.add("rotationScale",{type:"number",title:"Rotation Scale",description:"The scale of the rotation effect to the entity scale",default:30}),TextAnimator.attributes.add("animationSpeedMultiplier",{type:"number",title:"Animation Speed Multiplier",description:"How fast the breathing and rotation animations play.",default:1}),TextAnimator.prototype.initialize=function(){this._timer=0},TextAnimator.prototype.update=function(t){this._timer+=t*this.animationSpeedMultiplier,this.setScale(),this.rotate()},TextAnimator.prototype.setScale=function(){var t=1+Math.sin(this._timer)*this.growthScale;this.entity.setLocalScale(t,t,t)},TextAnimator.prototype.rotate=function(){var t=Math.sin(this._timer)*this.rotationScale;this.entity.setEulerAngles(0,0,t)};var SAMPLE_COUNT=15;function computeGaussian(e,t){return 1/Math.sqrt(2*Math.PI*t)*Math.exp(-e*e/(2*t*t))}function calculateBlurValues(e,t,o,s,r){e[0]=computeGaussian(0,r),t[0]=0,t[1]=0;var i,l,a=e[0];for(i=0,l=Math.floor(SAMPLE_COUNT/2);i<l;i++){var u=computeGaussian(i+1,r);e[2*i]=u,e[2*i+1]=u,a+=2*u;var h=2*i+1.5;t[4*i]=o*h,t[4*i+1]=s*h,t[4*i+2]=-o*h,t[4*i+3]=-s*h}for(i=0,l=e.length;i<l;i++)e[i]/=a}function BloomEffect(e){pc.PostEffect.call(this,e);var t={aPosition:pc.SEMANTIC_POSITION},o=["attribute vec2 aPosition;","","varying vec2 vUv0;","","void main(void)","{","    gl_Position = vec4(aPosition, 0.0, 1.0);","    vUv0 = (aPosition + 1.0) * 0.5;","}"].join("\n"),s=["precision "+e.precision+" float;","","varying vec2 vUv0;","","uniform sampler2D uBaseTexture;","uniform float uBloomThreshold;","","void main(void)","{","    vec4 color = texture2D(uBaseTexture, vUv0);","","    gl_FragColor = clamp((color - uBloomThreshold) / (1.0 - uBloomThreshold), 0.0, 1.0);","}"].join("\n"),r=["precision "+e.precision+" float;","","#define SAMPLE_COUNT "+SAMPLE_COUNT,"","varying vec2 vUv0;","","uniform sampler2D uBloomTexture;","uniform vec2 uBlurOffsets[SAMPLE_COUNT];","uniform float uBlurWeights[SAMPLE_COUNT];","","void main(void)","{","    vec4 color = vec4(0.0);","    for (int i = 0; i < SAMPLE_COUNT; i++)","    {","        color += texture2D(uBloomTexture, vUv0 + uBlurOffsets[i]) * uBlurWeights[i];","    }","","    gl_FragColor = color;","}"].join("\n"),i=["precision "+e.precision+" float;","","varying vec2 vUv0;","","uniform float uBloomEffectIntensity;","uniform sampler2D uBaseTexture;","uniform sampler2D uBloomTexture;","","void main(void)","{","    vec4 bloom = texture2D(uBloomTexture, vUv0) * uBloomEffectIntensity;","    vec4 base = texture2D(uBaseTexture, vUv0);","","    base *= (1.0 - clamp(bloom, 0.0, 1.0));","","    gl_FragColor = base + bloom;","}"].join("\n");this.extractShader=new pc.Shader(e,{attributes:t,vshader:o,fshader:s}),this.blurShader=new pc.Shader(e,{attributes:t,vshader:o,fshader:r}),this.combineShader=new pc.Shader(e,{attributes:t,vshader:o,fshader:i}),this.targets=[],this.bloomThreshold=.25,this.blurAmount=4,this.bloomIntensity=1.25,this.sampleWeights=new Float32Array(SAMPLE_COUNT),this.sampleOffsets=new Float32Array(2*SAMPLE_COUNT)}BloomEffect.prototype=Object.create(pc.PostEffect.prototype),BloomEffect.prototype.constructor=BloomEffect,BloomEffect.prototype._destroy=function(){var e;if(this.targets)for(e=0;e<this.targets.length;e++)this.targets[e].destroyTextureBuffers(),this.targets[e].destroy();this.targets.length=0},BloomEffect.prototype._resize=function(e){var t,o=e.colorBuffer.width,s=e.colorBuffer.height;if(o!==this.width||s!==this.height)for(this.width=o,this.height=s,this._destroy(),t=0;t<2;t++){var r=new pc.Texture(this.device,{name:"Bloom Texture"+t,format:pc.PIXELFORMAT_R8_G8_B8_A8,width:o>>1,height:s>>1,mipmaps:!1});r.minFilter=pc.FILTER_LINEAR,r.magFilter=pc.FILTER_LINEAR,r.addressU=pc.ADDRESS_CLAMP_TO_EDGE,r.addressV=pc.ADDRESS_CLAMP_TO_EDGE,r.name="pe-bloom";var i=new pc.RenderTarget({name:"Bloom Render Target "+t,colorBuffer:r,depth:!1});this.targets.push(i)}},Object.assign(BloomEffect.prototype,{render:function(e,t,o){this._resize(e);var s=this.device,r=s.scope;r.resolve("uBloomThreshold").setValue(this.bloomThreshold),r.resolve("uBaseTexture").setValue(e.colorBuffer),pc.drawFullscreenQuad(s,this.targets[0],this.vertexBuffer,this.extractShader),calculateBlurValues(this.sampleWeights,this.sampleOffsets,1/this.targets[1].width,0,this.blurAmount),r.resolve("uBlurWeights[0]").setValue(this.sampleWeights),r.resolve("uBlurOffsets[0]").setValue(this.sampleOffsets),r.resolve("uBloomTexture").setValue(this.targets[0].colorBuffer),pc.drawFullscreenQuad(s,this.targets[1],this.vertexBuffer,this.blurShader),calculateBlurValues(this.sampleWeights,this.sampleOffsets,0,1/this.targets[0].height,this.blurAmount),r.resolve("uBlurWeights[0]").setValue(this.sampleWeights),r.resolve("uBlurOffsets[0]").setValue(this.sampleOffsets),r.resolve("uBloomTexture").setValue(this.targets[1].colorBuffer),pc.drawFullscreenQuad(s,this.targets[0],this.vertexBuffer,this.blurShader),r.resolve("uBloomEffectIntensity").setValue(this.bloomIntensity),r.resolve("uBloomTexture").setValue(this.targets[0].colorBuffer),r.resolve("uBaseTexture").setValue(e.colorBuffer),pc.drawFullscreenQuad(s,t,this.vertexBuffer,this.combineShader,o)}});var Bloom=pc.createScript("bloom");Bloom.attributes.add("bloomIntensity",{type:"number",default:1,min:0,title:"Intensity"}),Bloom.attributes.add("bloomThreshold",{type:"number",default:.25,min:0,max:1,title:"Threshold"}),Bloom.attributes.add("blurAmount",{type:"number",default:4,min:1,title:"Blur amount"}),Bloom.prototype.initialize=function(){this.effect=new BloomEffect(this.app.graphicsDevice),this.effect.bloomThreshold=this.bloomThreshold,this.effect.blurAmount=this.blurAmount,this.effect.bloomIntensity=this.bloomIntensity;var e=this.entity.camera.postEffects;e.addEffect(this.effect),this.on("attr",(function(e,t){this.effect[e]=t}),this),this.on("state",(function(t){t?e.addEffect(this.effect):e.removeEffect(this.effect)}))};function FxaaEffect(e){pc.PostEffect.call(this,e);var o={aPosition:pc.SEMANTIC_POSITION},t=["attribute vec2 aPosition;","","void main(void)","{","    gl_Position = vec4(aPosition, 0.0, 1.0);","}"].join("\n"),a=["precision "+e.precision+" float;","","uniform sampler2D uColorBuffer;","uniform vec2 uResolution;","","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","","void main()","{","    vec3 rgbNW = texture2D( uColorBuffer, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * uResolution ).xyz;","    vec3 rgbNE = texture2D( uColorBuffer, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * uResolution ).xyz;","    vec3 rgbSW = texture2D( uColorBuffer, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * uResolution ).xyz;","    vec3 rgbSE = texture2D( uColorBuffer, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * uResolution ).xyz;","    vec4 rgbaM  = texture2D( uColorBuffer,  gl_FragCoord.xy  * uResolution );","    vec3 rgbM  = rgbaM.xyz;","    float opacity  = rgbaM.w;","","    vec3 luma = vec3( 0.299, 0.587, 0.114 );","","    float lumaNW = dot( rgbNW, luma );","    float lumaNE = dot( rgbNE, luma );","    float lumaSW = dot( rgbSW, luma );","    float lumaSE = dot( rgbSE, luma );","    float lumaM  = dot( rgbM,  luma );","    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","","    vec2 dir;","    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","","    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","","    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","    dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX), max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX), dir * rcpDirMin)) * uResolution;","","    vec3 rgbA = 0.5 * (","        texture2D( uColorBuffer, gl_FragCoord.xy  * uResolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +","        texture2D( uColorBuffer, gl_FragCoord.xy  * uResolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );","","    vec3 rgbB = rgbA * 0.5 + 0.25 * (","        texture2D( uColorBuffer, gl_FragCoord.xy  * uResolution + dir * -0.5 ).xyz +","        texture2D( uColorBuffer, gl_FragCoord.xy  * uResolution + dir * 0.5 ).xyz );","","    float lumaB = dot( rgbB, luma );","","    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )","    {","        gl_FragColor = vec4( rgbA, opacity );","    }","    else","    {","        gl_FragColor = vec4( rgbB, opacity );","    }","}"].join("\n");this.fxaaShader=new pc.Shader(e,{attributes:o,vshader:t,fshader:a}),this.resolution=new Float32Array(2)}FxaaEffect.prototype=Object.create(pc.PostEffect.prototype),FxaaEffect.prototype.constructor=FxaaEffect,Object.assign(FxaaEffect.prototype,{render:function(e,o,t){var a=this.device,r=a.scope;this.resolution[0]=1/e.width,this.resolution[1]=1/e.height,r.resolve("uResolution").setValue(this.resolution),r.resolve("uColorBuffer").setValue(e.colorBuffer),pc.drawFullscreenQuad(a,o,this.vertexBuffer,this.fxaaShader,t)}});var Fxaa=pc.createScript("fxaa");Fxaa.prototype.initialize=function(){this.effect=new FxaaEffect(this.app.graphicsDevice);var e=this.entity.camera.postEffects;e.addEffect(this.effect),this.on("state",(function(o){o?e.addEffect(this.effect):e.removeEffect(this.effect)})),this.on("destroy",(function(){e.removeEffect(this.effect)}))};var AmbientManager=pc.createScript("ambientManager");AmbientManager.attributes.add("startingColor",{type:"rgba",title:"Starting Color",description:"The starting color for the ambient"}),AmbientManager.attributes.add("finalColor",{type:"rgba",title:"Final Color",description:"The final color for the ambient"}),AmbientManager.attributes.add("targetMaterial",{type:"asset",assetType:"material",title:"Target Material",description:"The material whose color to set (Matching the ambient color)"}),AmbientManager.prototype.initialize=function(){this.updateTransition(0)},AmbientManager.prototype.updateTransition=function(t){var a=new pc.Color;a.lerp(this.startingColor,this.finalColor,t);var e=this.targetMaterial.resource;e.emissive=a,e.opacity=a.a,e.update()};var HealthCounter=pc.createScript("healthCounter");HealthCounter.attributes.add("targetEntityTag",{type:"string",default:"Player",title:"Target Entity Tag",description:"The name of the entity to show the health of."}),HealthCounter.attributes.add("heartIcons",{type:"entity",array:!0,title:"Heart Icons",description:"The icons to enable/disable as the health increases or decreases."}),HealthCounter.attributes.add("sizeLerpSpeed",{type:"number",title:"Size Lerp Speed",description:"How fast the health display size should return to normal.",default:100}),HealthCounter.attributes.add("maxSize",{type:"number",title:"Size Multiplier",description:"How large the health display should get when it decreases.",default:1.6}),HealthCounter.prototype.initialize=function(){this._sizeLerpProgress=0,this.entity.on("enable",this.initializeCounter,this)},HealthCounter.prototype.update=function(t){this._sizeLerpProgress+=t*this.sizeLerpSpeed,this._targetEntity||this.initializeCounter(),this.handleSizeLerp()},HealthCounter.prototype.updateCounter=function(){for(var t=this._targetEntity.script.health.currentHealth,e=this._targetEntity.script.health.maxHealth,i=0;i<e;i++)this.heartIcons[i].enabled=i+1<=t;this._sizeLerpProgress=0,this.entity.setLocalScale(this.maxSize,this.maxSize,this.maxSize)},HealthCounter.prototype.initializeCounter=function(){this._targetEntity=this.app.root.findByTag(this.targetEntityTag)[0],this._targetEntity&&(this._targetEntity.script.health.on("damaged",this.updateCounter,this),this._targetEntity.script.health.on("die",this.resetTarget,this),this.updateCounter())},HealthCounter.prototype.handleSizeLerp=function(){var t=pc.math.lerp(this.entity.getLocalScale().x,1,this._sizeLerpProgress);this.entity.setLocalScale(t,t,t)},HealthCounter.prototype.resetTarget=function(){this._targetEntity=null};var DamageEffect=pc.createScript("damageEffect");DamageEffect.attributes.add("particleEffect",{type:"asset",assetType:"template",title:"Particle Effect Template",description:"The particle effect to spawn on being damaged."}),DamageEffect.prototype.initialize=function(){this.entity.script.health.on("damaged",this.onDamage,this)},DamageEffect.prototype.onDamage=function(){this.entity.sound.play("Explosion");var t=this.particleEffect.resource.instantiate();t.reparent(this.app.root),t.setPosition(this.entity.getPosition())};var PitchVariator=pc.createScript("pitchVariator");PitchVariator.attributes.add("deviation",{type:"number",title:"Deviation",description:"How much the pitch should deviate from the starting value"}),PitchVariator.prototype.initialize=function(){this.entity.sound.pitch=1+getRandomDeviation(100*this.deviation)/100};var SceneSwitcherButton=pc.createScript("sceneSwitcherButton");SceneSwitcherButton.attributes.add("scene",{type:"string",title:"Target Scene Name",description:"The name of the scene to switch to."}),SceneSwitcherButton.prototype.initialize=function(){this.entity.button.on("click",this.doSwitch,this)},SceneSwitcherButton.prototype.doSwitch=function(){this.app.fire("scene:beforechange"),this.app.scenes.changeScene(this.scene)};var ScaleRandomizer=pc.createScript("scaleRandomizer");ScaleRandomizer.attributes.add("baseScale",{type:"number",title:"Base Scale",description:"The base scale to deviate from"}),ScaleRandomizer.attributes.add("scaleDeviation",{type:"number",title:"Scale Deviation",description:"The amount by which the effective scale should deviate from the base scale"}),ScaleRandomizer.prototype.initialize=function(){this.entity.setLocalScale(this.getRandomScale())},ScaleRandomizer.prototype.getRandomScale=function(){var e=getRandomFloatDeviation(this.scaleDeviation,3),a=this.baseScale+e;return new pc.Vec3(a,a,a)};var Parallax=pc.createScript("parallax");Parallax.attributes.add("relativeTo",{type:"entity",title:"Relative To",description:"The entity that drives the parallax effect."}),Parallax.attributes.add("parallaxFactor",{type:"vec3",title:"Parallax Factor",description:"How much the entity should move relative to the selected entity, by axis."}),Parallax.prototype.initialize=function(){this.startPos=this.entity.getPosition().clone(),this.tempPos=new pc.Vec3,this.tempRelativePos=this.relativeTo.getPosition().clone()},Parallax.prototype.update=function(){this.tempRelativePos.copy(this.relativeTo.getPosition()),this.tempPos.x=this.startPos.x+this.tempRelativePos.x*this.parallaxFactor.x,this.tempPos.y=this.startPos.y+this.tempRelativePos.y*this.parallaxFactor.y,this.tempPos.z=this.startPos.z+this.tempRelativePos.z*this.parallaxFactor.z,this.entity.setPosition(this.tempPos)};var MeshRandomizer=pc.createScript("meshRandomizer");MeshRandomizer.attributes.add("meshes",{type:"json",schema:[{name:"mesh",type:"asset",assetType:"render",title:"Mesh"},{name:"colliderSize",type:"number",title:"Collider Size"}],array:!0,title:"Meshes",description:"The meshes and corresponding collider sizes to pick from."}),MeshRandomizer.prototype.initialize=function(){var e=this.getRandomMesh();this.entity.render.asset=e.mesh,this.entity.collision.radius=e.colliderSize},MeshRandomizer.prototype.getRandomMesh=function(){return this.meshes[getRandomInRange(0,this.meshes.length-1)]};var FragmentSpawner=pc.createScript("fragmentSpawner");FragmentSpawner.attributes.add("minMaxCount",{type:"vec2",title:"Min, Max Count",description:"The minimum and maximum amount of fragments to spawn."}),FragmentSpawner.attributes.add("fragmentTemplate",{type:"asset",assetType:"template",description:"The template to spawn as a fragment entity."}),FragmentSpawner.attributes.add("positionalDeviation",{type:"number",title:"Positional Deviation",description:"How far away from the destroyed entity the fragments can be spawned."}),FragmentSpawner.prototype.initialize=function(){this.entity.on("destroy",this.spawnFragments,this)},FragmentSpawner.prototype.spawnFragments=function(){if(null!==FragmentSpawner.fragmentParent)for(var t=getRandomInRange(this.minMaxCount.x,this.minMaxCount.y),e=0;e<t;e++)this.spawnSingleFragment()},FragmentSpawner.prototype.getFragmentPosition=function(){return new pc.Vec3(getRandomDeviation(this.positionalDeviation),-1,getRandomDeviation(this.positionalDeviation)).add(this.entity.getPosition())},FragmentSpawner.prototype.spawnSingleFragment=function(){var t=this.fragmentTemplate.resource.instantiate();t.reparent(this.app.root);var e=this.getFragmentPosition();t.setPosition(e)};var CameraShake=pc.createScript("cameraShake");CameraShake.attributes.add("shakeInterval",{type:"number",default:.1,title:"Camera Shake Interval"}),CameraShake.attributes.add("maxShakeDistance",{type:"number",default:.1,title:"Max Shake Distance"}),CameraShake.attributes.add("duration",{type:"number",default:1,title:"Duration"}),CameraShake.prototype.initialize=function(){this.time=0,this.timeSinceLastShake=0,this.startPosition=this.entity.getPosition().clone(),this.app.on("camera:shake",this.onStartShake,this)},CameraShake.prototype.update=function(t){if(this.time+=t,this.time<this.duration&&(this.timeSinceLastShake+=t,this.timeSinceLastShake>=this.shakeInterval)){var a=1-pc.math.clamp(this.time/this.duration,0,1),e=2*Math.PI*pc.math.random(0,1),i=pc.math.random(0,this.maxShakeDistance)*a+pc.math.random(0,this.maxShakeDistance)*a,h=i>1?2-i:i,s=h*Math.cos(e),n=h*Math.sin(e);this.entity.setLocalPosition(this.startPosition.x+s,this.startPosition.y+n,this.startPosition.z),this.timeSinceLastShake-=this.shakeInterval}},CameraShake.prototype.onStartShake=function(){this.time=0};var PerlinCameraShake=pc.createScript("perlinCameraShake");PerlinCameraShake.attributes.add("traumaMult",{type:"number",title:"Trauma Multiplier",description:"How strong the camera shake should be."}),PerlinCameraShake.attributes.add("traumaMag",{type:"number",title:"Trauma Magnitude",description:"How far the camera should be shaken."}),PerlinCameraShake.attributes.add("traumaRotMag",{type:"number",title:"Trauma Rotation Magnitude",description:"How far the camera should be rotated"}),PerlinCameraShake.attributes.add("traumaDepthMag",{type:"number",title:"Trauma Depth Magnitude"}),PerlinCameraShake.attributes.add("traumaDecay",{type:"number",title:"Trauma Decay",description:"How quickly the camera should stop shaking"}),PerlinCameraShake.prototype.initialize=function(){noise.seed(window.Date.now()%65536),this._trauma=0,this._timer=0,this._startPos=this.entity.getPosition().clone(),this._startEulerAngles=this.entity.getEulerAngles().clone(),this._currentEulerAngles=this._startEulerAngles.clone(),this.app.on("camera:shake",this.onShake,this),this.on("destroy",(function(){this.app.off("camera:shake",this.onShake,this)}),this)},PerlinCameraShake.prototype.setTrauma=function(t){this._trauma=pc.math.clamp(t,0,1)},PerlinCameraShake.prototype.update=function(t){if(this._trauma>0){this.incrementTimer(t);var e=this.getVec();e.mulScalar(this.traumaMag*this._trauma),e.add(this._startPos),this.entity.setPosition(e),this._currentEulerAngles.copy(this._startEulerAngles),this._currentEulerAngles.y=this.getFloat(10)*this.traumaRotMag*this._trauma,this.entity.setEulerAngles(this._currentEulerAngles),this.decayTrauma(t)}else{var a=this.entity.getPosition(),r=this._currentEulerAngles;a.lerp(a,this._startPos,t),r.lerp(r,this._startEulerAngles,t),this.entity.setPosition(a),this.entity.setEulerAngles(r)}},PerlinCameraShake.prototype.getFloat=function(t){return noise.perlin2(t,this._timer)},PerlinCameraShake.prototype.getVec=function(){var t=this.getFloat(1),e=this.getFloat(100);return new pc.Vec3(t,0,e)},PerlinCameraShake.prototype.incrementTimer=function(t){this._timer+=t*Math.pow(this._trauma,.3)*this.traumaMult},PerlinCameraShake.prototype.decayTrauma=function(t){this.setTrauma(this._trauma-t*this.traumaDecay*(this._trauma+.3))},PerlinCameraShake.prototype.onShake=function(t){t>this._trauma&&(this._trauma=t)};!function(r){var t=r.noise={};function Grad(r,t,o){this.x=r,this.y=t,this.z=o}Grad.prototype.dot2=function(r,t){return this.x*r+this.y*t},Grad.prototype.dot3=function(r,t,o){return this.x*r+this.y*t+this.z*o};var o=[new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)],e=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],a=new Array(512),n=new Array(512);t.seed=function(r){r>0&&r<1&&(r*=65536),(r=Math.floor(r))<256&&(r|=r<<8);for(var t=0;t<256;t++){var d;d=1&t?e[t]^255&r:e[t]^r>>8&255,a[t]=a[t+256]=d,n[t]=n[t+256]=o[d%12]}},t.seed(0);var d=.5*(Math.sqrt(3)-1),f=(3-Math.sqrt(3))/6,l=1/6;function fade(r){return r*r*r*(r*(6*r-15)+10)}function lerp(r,t,o){return(1-o)*r+o*t}t.simplex2=function(r,t){var o,e,l=(r+t)*d,i=Math.floor(r+l),h=Math.floor(t+l),p=(i+h)*f,u=r-i+p,s=t-h+p;u>s?(o=1,e=0):(o=0,e=1);var G=u-o+f,w=s-e+f,v=u-1+2*f,M=s-1+2*f,c=n[(i&=255)+a[h&=255]],y=n[i+o+a[h+e]],x=n[i+1+a[h+1]],m=.5-u*u-s*s,q=.5-G*G-w*w,z=.5-v*v-M*M;return 70*((m<0?0:(m*=m)*m*c.dot2(u,s))+(q<0?0:(q*=q)*q*y.dot2(G,w))+(z<0?0:(z*=z)*z*x.dot2(v,M)))},t.simplex3=function(r,t,o){var e,d,f,i,h,p,u=.3333333333333333*(r+t+o),s=Math.floor(r+u),G=Math.floor(t+u),w=Math.floor(o+u),v=(s+G+w)*l,M=r-s+v,c=t-G+v,y=o-w+v;M>=c?c>=y?(e=1,d=0,f=0,i=1,h=1,p=0):M>=y?(e=1,d=0,f=0,i=1,h=0,p=1):(e=0,d=0,f=1,i=1,h=0,p=1):c<y?(e=0,d=0,f=1,i=0,h=1,p=1):M<y?(e=0,d=1,f=0,i=0,h=1,p=1):(e=0,d=1,f=0,i=1,h=1,p=0);var x=M-e+l,m=c-d+l,q=y-f+l,z=M-i+2*l,A=c-h+2*l,b=y-p+2*l,g=M-1+.5,j=c-1+.5,k=y-1+.5,B=n[(s&=255)+a[(G&=255)+a[w&=255]]],C=n[s+e+a[G+d+a[w+f]]],D=n[s+i+a[G+h+a[w+p]]],E=n[s+1+a[G+1+a[w+1]]],F=.6-M*M-c*c-y*y,H=.6-x*x-m*m-q*q,I=.6-z*z-A*A-b*b,J=.6-g*g-j*j-k*k;return 32*((F<0?0:(F*=F)*F*B.dot3(M,c,y))+(H<0?0:(H*=H)*H*C.dot3(x,m,q))+(I<0?0:(I*=I)*I*D.dot3(z,A,b))+(J<0?0:(J*=J)*J*E.dot3(g,j,k)))},t.perlin2=function(r,t){var o=Math.floor(r),e=Math.floor(t);r-=o,t-=e;var d=n[(o&=255)+a[e&=255]].dot2(r,t),f=n[o+a[e+1]].dot2(r,t-1),l=n[o+1+a[e]].dot2(r-1,t),i=n[o+1+a[e+1]].dot2(r-1,t-1),h=fade(r);return lerp(lerp(d,l,h),lerp(f,i,h),fade(t))},t.perlin3=function(r,t,o){var e=Math.floor(r),d=Math.floor(t),f=Math.floor(o);r-=e,t-=d,o-=f;var l=n[(e&=255)+a[(d&=255)+a[f&=255]]].dot3(r,t,o),i=n[e+a[d+a[f+1]]].dot3(r,t,o-1),h=n[e+a[d+1+a[f]]].dot3(r,t-1,o),p=n[e+a[d+1+a[f+1]]].dot3(r,t-1,o-1),u=n[e+1+a[d+a[f]]].dot3(r-1,t,o),s=n[e+1+a[d+a[f+1]]].dot3(r-1,t,o-1),G=n[e+1+a[d+1+a[f]]].dot3(r-1,t-1,o),w=n[e+1+a[d+1+a[f+1]]].dot3(r-1,t-1,o-1),v=fade(r),M=fade(t),c=fade(o);return lerp(lerp(lerp(l,u,v),lerp(i,s,v),c),lerp(lerp(h,G,v),lerp(p,w,v),c),M)}}(this);var TraumaInducer=pc.createScript("traumaInducer");TraumaInducer.attributes.add("onDamagedTrauma",{type:"number",default:0,title:"On Damaged Trauma",description:"How much trauma/shaking should be induced from a hit."}),TraumaInducer.attributes.add("onDestroyTrauma",{type:"number",default:0,title:"On Destroy Trauma",description:"How much trauma/shaking should be induced from destruction."}),TraumaInducer.prototype.initialize=function(){this.onDamagedTrauma>0&&this.entity.script.health.on("damaged",this.causeDamageTrauma,this),this.onDestroyTrauma>0&&this.entity.on("destroy",this.causeDestroyTrauma,this)},TraumaInducer.prototype.causeDamageTrauma=function(){this.app.fire("camera:shake",this.onDamagedTrauma)},TraumaInducer.prototype.causeDestroyTrauma=function(){this.app.fire("camera:shake",this.onDestroyTrauma)};var TextFader=pc.createScript("textFader");TextFader.attributes.add("fadeDuration",{type:"number",default:1.5,title:"Fade Duration",description:"How long it should take before the text fully fades."}),TextFader.attributes.add("fadedSize",{type:"number",default:.5,title:"Faded Size",description:"The size at which the text should be at when it is fully faded."}),TextFader.prototype.initialize=function(){this._startingScale=this.entity.getLocalScale().x,this._lerpProgress=0},TextFader.prototype.update=function(e){this.entity.element.opacity-=e/this.fadeDuration,this._lerpProgress+=e/this.fadeDuration,this.handleSizeLerp()},TextFader.prototype.handleSizeLerp=function(){var e=pc.math.lerp(this._startingScale,this.fadedSize,this._lerpProgress);this.entity.setLocalScale(e,e,e)};var BulletTimeEffect=pc.createScript("bulletTimeEffect");BulletTimeEffect.attributes.add("effectDuration",{type:"number",default:1,title:"Effect Duration",description:"How long the bullet time effect should last."}),BulletTimeEffect.attributes.add("timeCurve",{type:"curve",title:"Time Curve",description:"How much the time scale should be over unscaled time."}),BulletTimeEffect.prototype.initialize=function(){this._time=0,this.entity.on("destroy",(function(){this.app.timeScale=1}),this)},BulletTimeEffect.prototype.update=function(t){this._time+=t/this.app.timeScale/this.effectDuration,this.app.timeScale=this.timeCurve.value(this._time),this.app.timeScale=Math.min(1,this.app.timeScale)};pc.extend(pc.posteffect,function(){var VignetteAberration=function(e){var t={aPosition:pc.gfx.SEMANTIC_POSITION},i=["attribute vec2 aPosition;","","varying vec2 vUv0;","","void main(void)","{","    gl_Position = vec4(aPosition, 0.0, 1.0);","    vUv0 = (aPosition.xy + 1.0) * 0.5;","}"].join("\n"),r=["precision "+e.precision+" float;","","uniform sampler2D uColorBuffer;","uniform float uDarkness;","uniform float uOffset;","uniform float uAberration;","","varying vec2 vUv0;","","void main() {","    vec2 uv = (vUv0 - vec2(0.5)) * vec2(uOffset);","    float f = dot(uv, uv);","    vec4 texelA = texture2D(uColorBuffer, vUv0 - (uv * f * uAberration / 100.0));","    vec4 texelB = texture2D(uColorBuffer, vUv0 + (uv * f * uAberration / 100.0));","    gl_FragColor = vec4(mix(vec3(texelA.r, texelB.gb), vec3(1.0 - uDarkness), f), texelA.a);","}"].join("\n");this.vignetteShader=new pc.gfx.Shader(e,{attributes:t,vshader:i,fshader:r}),this.offset=1,this.darkness=1};return(VignetteAberration=pc.inherits(VignetteAberration,pc.posteffect.PostEffect)).prototype=pc.extend(VignetteAberration,{render:function(e,t,i){var r=this.device,n=r.scope;e.colorBuffer.minFilter=pc.gfx.FILTER_LINEAR,e.colorBuffer.magFilter=pc.gfx.FILTER_LINEAR,n.resolve("uColorBuffer").setValue(e.colorBuffer),n.resolve("uOffset").setValue(this.offset),n.resolve("uDarkness").setValue(this.darkness),n.resolve("uAberration").setValue(this.aberration),pc.posteffect.drawFullscreenQuad(r,t,this.vertexBuffer,this.vignetteShader,i)}}),{VignetteAberration:VignetteAberration}}());var VignetteAberration=pc.createScript("VignetteAberration");VignetteAberration.attributes.add("offset",{type:"number",default:1,min:0,step:.05,decimalPrecision:5,displayName:"Offset"}),VignetteAberration.attributes.add("darkness",{type:"number",default:1,step:.05,decimalPrecision:5,displayName:"Darkness"}),VignetteAberration.attributes.add("aberration",{type:"number",default:.5,step:.1,decimalPrecision:5,displayName:"Aberration"}),VignetteAberration.prototype.initialize=function(){this.effect=new pc.posteffect.VignetteAberration(this.app.graphicsDevice),this.on("set",this.onAttributeChanged,this),this.effect.offset=this.offset,this.effect.darkness=this.darkness,this.effect.aberration=this.aberration,this.on("enable",this.onEnable,this),this.on("disable",this.onDisable,this),this.on("attr",this.onAttributeChanged,this),this.onEnable()},VignetteAberration.prototype.onAttributeChanged=function(e,t,i){this.effect[e]=t},VignetteAberration.prototype.onEnable=function(){this.entity.camera.postEffects.addEffect(this.effect)},VignetteAberration.prototype.onDisable=function(){this.entity.camera.postEffects.removeEffect(this.effect)};